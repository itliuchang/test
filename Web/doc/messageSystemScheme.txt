消息系统设计

1.设计
  a.系统消息中一对一的消息(如评论的回复等)/通知用在环信中注册的系统帐号发送
  b.全局系统消息不使用环信发送，在message中创建一条RecID=0且type=2的消息记录即可
    全局系统消息与一对一的私聊和通知不一样，它的状态用messageLog表记录，好处是全局消息只用了一条表记录节省存储空间，当用户查看某条全局消息时自动在messageLog表中插入一条记录标明该全局消息对该用户为已读
  c.后端phpSDK只负责环信帐号注册登录/token获取、历史记录等；
    环信消息的发送/接收使用它的webSDK实现，它的webSDK会建立socket连接，能实时监听来自环信的新消息
    在用webSDK发送消息时同时使用ajax将此消息备份到后端数据库中
  d.messageRelation的lastMsg字段用于保存该用户与其它用户或系统最后的对话，这是个冗余字段，方便在消息列表中显示最后的聊天记录。
    此字段不保存表情符号需保存时过滤掉emojj表情符且最多只保存50字，多出50字在列表中显示...
  e.消息列表及聊天窗口下拉加载更多使用jquery infinite实现，聊天窗口上拉加载更多历史记录自己实现
  f.用户的头像与昵称保存在我们的后台，不在环信中保存，通过环信id关联获取此数据
  g.用户登录后且没有新消息时，每1分钟ajax轮询一次是否有新系统消息。
    用户A发送消息给B时，先将消息记录到后台并置为未读，B打开与用户A的聊天窗口时则将与A的所有私聊置为已读；
    这样做在显示消息列表有几条新(离线)消息时就不需要再到环信那里去查询了。
    当用户A发消息给B且B正好在与A的聊天窗口时则直接显示并发送ajax到后台置为已读否则只显示与A用户有几条新消息(webSDK的回调中处理)
  i.在消息列表页要显示有几条新消息
  ***重要：环信ID/username即为user表中的id

2.代码
  a.系统的环信帐号配置见params.php中的partner->emchat->sysAccount
  b.新用户注册时初始化消息系统环境：创建环信帐号并在messageRelation创建该用户的系统消息关系
    代码见RegistAction中调用EasemobHelper::initIM方法处
  c.登录后立即ajax查有无新系统/离线消息并Message菜单高亮，然后5分钟轮询一次新消息(登录后php中不用检查新消息了, 代码只用一套)
    代码见main.js中的checkNewMessage方法